### Proxy Setting
#
#proxy="socks5://127.0.0.1:1080";
#export http_proxy=$proxy;
#export https_proxy=$proxy;
#export ftp_proxy=$proxy;
#export ALL_PROXY=$proxy;
#export no_proxy="localhost, 127.0.0.1, ::1";

### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://hub.fastgit.org/zdharma-continuum/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/z-a-rust \
    zdharma-continuum/z-a-as-monitor \
    zdharma-continuum/z-a-patch-dl \
    zdharma-continuum/z-a-bin-gem-node

# powerlevel10k 主题
# zinit ice depth=1; zinit light romkatv/powerlevel10k

# z 跳转
zinit ice depth=1; zinit light rupa/z

# 语法高亮
zinit light zsh-users/zsh-syntax-highlighting

# 自动建议
zinit ice lucid wait="0" atload='_zsh_autosuggest_start'
zinit light zsh-users/zsh-autosuggestions

# 补全
zinit light zsh-users/zsh-completions

# 加载 OMZ 框架及部分插件
#zinit snippet OMZ::lib/completion.zsh
zinit snippet OMZ::lib/history.zsh
zinit snippet OMZ::lib/key-bindings.zsh
zinit snippet OMZ::lib/theme-and-appearance.zsh
zinit snippet OMZ::plugins/colored-man-pages/colored-man-pages.plugin.zsh
zinit snippet OMZ::plugins/sudo/sudo.plugin.zsh
zinit snippet OMZ::plugins/history-substring-search/history-substring-search.zsh
zinit snippet OMZ::plugins/vi-mode/vi-mode.plugin.zsh

#zinit ice svn
zinit snippet OMZ::plugins/extract/extract.plugin.zsh

# cd 的补全目录
autoload -Uz compinit
compinit
zstyle ':completion:*' menu select

### End of Zinit's installer chunk

### alias
#
result=$(which exa)
if [ -n "$result" ] ;then
	alias ls=exa
	alias la='exa -ga'
	alias ll='exa -lgha'
	alias l='exa -lgh'
else
	alias ls='ls --color=auto'
	alias la='ls -a --color=auto'
	alias ll='ls -lha --color=auto'
	alias l='ls -lh --color=auto'
fi

result=$(which nvim)
if [ -n "$result" ] ;then
	alias vi='nvim'
	alias vim='nvim'
	EDITOR="nvim"
	export EDITOR
else
	EDITOR="vim"
	export EDITOR
fi

result=$(which bat)
if [ -n "$result" ] ;then
	alias cat='bat'
fi

alias ip='ip -c'
alias cman='man -M /usr/share/man/zh_CN'
alias grep='grep --color=auto --exclude "tags"'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

export TERM=xterm-256color
export BROWSER=microsoft-edge-dev

### 按键绑定
#
#Rebind HOME and END to do the decent thing:
bindkey '\e[1~' beginning-of-line
bindkey '\e[4~' end-of-line
case $TERM in (xterm*)
bindkey '\eOH' beginning-of-line
bindkey '\eOF' end-of-line
esac
#And DEL too, as well as PGDN and insert:
bindkey '\e[3~' delete-char
bindkey '\e[6~' end-of-history
bindkey '\e[2~' redisplay
#Now bind pgup to paste the last word of the last command,
bindkey '\e[5~' insert-last-word
#Rebind substring search
bindkey '^P' history-substring-search-up
bindkey '^N' history-substring-search-down


### fzf configuration
## Options to fzf command
export FZF_COMPLETION_TRIGGER='~~'
export FZF_COMPLETION_OPTS='+c -x'
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# ==== linuxbrew
# Until LinuxBrew is fixed, the following is required.
# See: https://github.com/Homebrew/linuxbrew/issues/47
# export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/lib64/pkgconfig:/usr/lib64/pkgconfig:/usr/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib64/pkgconfig:/usr/share/pkgconfig:$PKG_CONFIG_PATH
## Setup linux brew
# export LINUXBREWHOME=/home/linuxbrew/.linuxbrew
# export PATH=$LINUXBREWHOME/bin:$PATH
# export MANPATH=$LINUXBREWHOME/man:$MANPATH
# export PKG_CONFIG_PATH=$LINUXBREWHOME/lib64/pkgconfig:$LINUXBREWHOME/lib/pkgconfig:$PKG_CONFIG_PATH
# export LD_LIBRARY_PATH=$LINUXBREWHOME/lib64:$LINUXBREWHOME/lib:$LD_LIBRARY_PATH


### Bashhub.com Installation
## Remote command history synchronization
###
#
#if [ -f ~/.bashhub/bashhub.zsh ]; then
#    source ~/.bashhub/bashhub.zsh
#fi

eval "$(starship init zsh)"
