installed () {
  command -v "$1" >/dev/null 2>&1
}

running () {
  pgrep "$1" > /dev/null 2>&1
}

ZINIT_GITHUB=gitclone.com/github.com
ZINIT_RAW_GITHUB=raw.staticdn.net

ZINIT_HOME="${HOME}/DotFiles/.zinit/"
source "${ZINIT_HOME}/zinit.zsh"

# load - with reporting/investigating.
# light - without reporting/investigating.
ZINIT_LOAD_METHOD="load"

if [ ${ZINIT_LOAD_METHOD} = "light" ]; then
	ZINIT_LIGHT_MODE="light-mode"
else
	ZINIT_LIGHT_MODE=""
fi

### Proxy Setting
#
hostip="172.31.80.1"
alias setss='export https_proxy="http://${hostip}:7890";export http_proxy="http://${hostip}:7890";export all_proxy="socks5://${hostip}:7890";'
alias unsetss='unset all_proxy'

#if running brook; then
#  proxy="socks5://127.0.0.1:1080";
#  export http_proxy=$proxy;
#  export https_proxy=$proxy;
#  export ftp_proxy=$proxy;
#  export ALL_PROXY=$proxy;
#  export no_proxy="localhost, 127.0.0.1, ::1";
#fi

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
#zinit light-mode for \
#    zdharma-continuum/z-a-rust \
#    zdharma-continuum/z-a-as-monitor \
#    zdharma-continuum/z-a-patch-dl \
#    zdharma-continuum/z-a-bin-gem-node

zinit snippet https://${ZINIT_RAW_GITHUB}/ohmyzsh/ohmyzsh/master/lib/history.zsh
zinit snippet https://${ZINIT_RAW_GITHUB}/ohmyzsh/ohmyzsh/master/plugins/vi-mode/vi-mode.plugin.zsh 
#zinit snippet OMZ::lib/completion.zsh
#zinit snippet OMZ::lib/key-bindings.zsh
#zinit snippet OMZ::lib/theme-and-appearance.zsh

zinit wait"1" lucid ${ZINIT_LIGHT_MODE} for \
	https://${ZINIT_RAW_GITHUB}/ohmyzsh/ohmyzsh/master/plugins/colored-man-pages/colored-man-pages.plugin.zsh \
	https://${ZINIT_RAW_GITHUB}/ohmyzsh/ohmyzsh/master/plugins/sudo/sudo.plugin.zsh \
	https://${ZINIT_RAW_GITHUB}/ohmyzsh/ohmyzsh/master/plugins/extract/extract.plugin.zsh

# 语法高亮
zinit ice wait lucid
zinit ${ZINIT_LOAD_METHOD} zsh-users/zsh-syntax-highlighting

# 自动建议
zinit ice wait lucid atload'_zsh_autosuggest_start'
zinit ${ZINIT_LOAD_METHOD} zsh-users/zsh-autosuggestions

# 补全
zinit ice wait lucid blockf
zinit ${ZINIT_LOAD_METHOD} zsh-users/zsh-completions

# exa
if ! installed exa; then
zinit ice as"program" from"gh-r" pick="bin/exa"
zinit ${ZINIT_LOAD_METHOD} ogham/exa
fi

# bat
if ! installed bat; then
zinit ice as"program" from"gh-r" pick="*/bat"
zinit ${ZINIT_LOAD_METHOD} sharkdp/bat
fi

# fd
if ! installed fd; then
zinit ice as"program" from"gh-r" pick="*/fd"
zinit ${ZINIT_LOAD_METHOD} sharkdp/fd
fi

# ripgrep
if ! installed rg; then
zinit ice as"program" from"gh-r" pick="*/rg"
zinit ${ZINIT_LOAD_METHOD} BurntSushi/ripgrep
fi

# navi
zinit ice as"program" from"gh-r" pick="navi" \
	atclone="./navi widget zsh > widget.zsh" \
	atpull="%atclone" \
	src="widget.zsh"
zinit ${ZINIT_LOAD_METHOD} denisidoro/navi

### fzf configuration
## Options to fzf command
export FZF_COMPLETION_TRIGGER='~~'
export FZF_COMPLETION_OPTS='--border --info=inline'
export FZF_ALT_C_COMMAND="fd --type d --hidden --follow --exclude ".git" ."

_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf "$@" --preview 'tree -C {} | head -200' ;;
    export|unset) fzf "$@" --preview "eval 'echo \$'{}" ;;
    ssh)          fzf "$@" --preview 'dig {}' ;;
    *)            fzf "$@" ;;
  esac
}

zinit ice lucid as"program" pick="bin/(fzf|fzf-tmux)" \
	atclone="make install;" \
	atpull="%atclone" \
	multisrc="shell/{completion,key-bindings}.zsh"
zinit ${ZINIT_LOAD_METHOD} junegunn/fzf

# cd 的补全目录
autoload -Uz compinit
compinit

#zstyle ':completion:*' menu select

# z 跳转
export _ZO_FZF_OPTS='--exit-0 --height=40% --inline-info --no-sort --reverse --select-1 --preview="exa -la {2..}"'
zinit ice as"program" from"gh-r" \
	atclone"./zoxide init zsh > init.zsh" \
	atpull"%atclone" src"init.zsh"
zinit ${ZINIT_LOAD_METHOD} ajeetdsouza/zoxide

# fzf-tab 替换tab功能
zinit ice wait lucid
zinit ${ZINIT_LOAD_METHOD} Aloxaf/fzf-tab

# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# preview directory's content with exa when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 --color=always $realpath'
# switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'



###
#### Alias
### 

if installed exa; then
	alias ls='exa'
	alias la='exa -ga'
	alias ll='exa -lgha'
	alias l='exa -lgh'
else
	alias ls='ls --color=auto'
	alias la='ls -a --color=auto'
	alias ll='ls -lha --color=auto'
	alias l='ls -lh --color=auto'
fi

if installed nvim; then
	alias vi='nvim'
	alias vim='nvim'
	alias vimdiff='nvim -d'
	export EDITOR="nvim"
else
	export EDITOR="vim"
fi

if installed bat;then
	alias cat='bat'
fi

if installed rg;then
    alias rg='rg -g '!tags' -g '!cscope.out''
fi

if installed viddy;then
	alias watch='viddy'
fi

alias ip='ip -c'
alias cman='man -M /usr/share/man/zh_CN'
alias grep='grep --color=auto --exclude "tags"'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

export TERM=xterm-256color
export BROWSER=microsoft-edge-dev
export XCURSOR_PATH=~/.local/share/icons:${XCURSOR_PATH}

PATH=${PATH}:/home/collin/Work/Scripts

### 按键绑定
typeset -g -A key

key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Delete]="${terminfo[kdch1]}"

[[ -n "${key[Home]}"      ]] && bindkey -- "${key[Home]}"       beginning-of-line
[[ -n "${key[End]}"       ]] && bindkey -- "${key[End]}"        end-of-line
[[ -n "${key[Insert]}"    ]] && bindkey -- "${key[Insert]}"     overwrite-mode
[[ -n "${key[Delete]}"    ]] && bindkey -- "${key[Delete]}"     delete-char

:<< Bashhub
### Bashhub.com Installation
## Remote command history synchronization
###

if [ -f ~/.bashhub/bashhub.zsh ]; then
    source ~/.bashhub/bashhub.zsh
fi
Bashhub

:<< powerlevel10k
# powerlevel10k 主题
zinit ice depth"1"
zinit light romkatv/powerlevel10k
powerlevel10k

## starship
zinit ice as"command" from"gh-r" \
          atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
          atpull"%atclone" src"init.zsh"
zinit ${ZINIT_LOAD_METHOD} starship/starship
